-- layer things in one line
d1 $ s "[~ cp, hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>]" # room 0.7 # gain (range 1 1.2 rand)

-- layer things with stack
d1 $ stack[
  fast 2 $ s "sine" >| note (arp "updown" (scale "major" ("[0,2,4,6]"+"<0 0 2 3>") + "c5")) # gain 0.7,
  s "sine" >| note (scale "major" ("[<-7 -5 -3 -1>,0,2](3,8)") + "c5") # gain 0.7
]

d2 $ stack[
  s "~ cp" # room 0.5,
  fast 2 $ s "hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>" # room 0.7 # gain (range 1 1.2 rand)
]

-- this is your drop
d1 $ s "~ cp" # gain 1.2 # room 0.5
d2 silence
d3 silence -- (because of something later)
d4 $ s "<feel:6(3,8) feel:6(5,8,1)>" # room 0.95 # speed "2 1" # gain 1.3 # squiz 1.1 # up "-2"

-- can trigger everything with do
do
  d1 $ s "~ cp" # gain 1.2 # room 0.5
  d2 silence
  d3 silence
  d4 $ s "<feel:6(3,8) feel:6(5,8,1)>" # room 0.95 # speed "2 1" # gain 1.3 # squiz 1.1 # up "-2"

-- can store it even in a variable
drop_It_All_Over_The___FLOOR = do
  d1 $ s "~ cp" # gain 1.2 # room 0.5
  d2 silence
  d3 silence
  d4 $ s "<feel:6(3,8) feel:6(5,8,1)>" # room 0.95 # speed "2 1" # gain 1.3 # squiz 1.1 # up "-2"

d1 silence

drop_It_All_Over_The___FLOOR

-- build up with snares
d3 $ qtrigger 3 $ seqP [
  (0, 1, s "feel:2*4"),
  (1,2, s "feel:2*8"),
  (2,3, s "feel:2*16"),
  (3,4, s "feel:2*32")
] # room 0.3 # hpf (slow 4 (1000*saw + 100)) # speed (slow 4 (range 1 2 saw))

-- put together with rising percussion pitch
d2 $ qtrigger 2 $ stack[
  s "~ cp" # room 0.5,
  fast 2 $ s "hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>" # room 0.7 # gain (range 1 1.2 rand)
] # speed (slow 4 (range 1 2 saw))

-- put it all together
do {
  d2 $ qtrigger 2 $ stack[
    s "~ cp" # room 0.5,
    fast 2 $ s "hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>" # room 0.7 # gain (range 1 1.2 rand)
  ] # speed (slow 4 (range 1 2 saw));
  d3 $ qtrigger 3 $ seqP [
    (0, 1, s "feel:2*4"),
    (1,2, s "feel:2*8"),
    (2,3, s "feel:2*16"),
    (3,4, s "feel:2*32")
  ] # room 0.3 # hpf (slow 4 (1000*saw + 100)) # speed (slow 4 (range 1 2 saw))
}

-- put it all together (more complicated)

-- first make a few functions

verse = stack[ fast 2 $ s "sine" >| note (arp "updown" (scale "major" ("[0,2,4,6]"+"<0 0 2 3>") + "c5")) # gain 0.7, s "sine" >| note (scale "major" ("[<-7 -5 -3 -1>,0,2](3,8)") + "c5") # gain 0.7 ]

versePercussion = stack[ s "~ cp" # room 0.5,fast 2 $ s "hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>" # room 0.7 # gain (range 1 1.2 rand)]

hihatBuild = stack[ s "~ cp" # room 0.5, fast 2 $ s "hh*2 hh*2 hh*2 <hh*6 [hh*2]!3>" # room 0.7 # gain (range 1 1.2 rand)] # speed (slow 4 (range 1 2 saw))

kickFill = s "[808bd:1 [~808bd:1*3]] [808bd:1 ~ 808bd:1*2] " # room 0.5 # speed (range 7.6 2.1 saw) # krush 10

-- try them just to make sure they works
d1 $ verse
d2 $ versePercussion
d2 $ hihatBuild
d1 $ kickFill

-- verse (with qtrigger and filterWhen to trigger on time, another example of this at the end)
we_playin_out_HeAh = do {
  d1 $ qtrigger 1 $ filterWhen (>=0) $ verse;
  d2 $ qtrigger 2 $ filterWhen (>=0) $ versePercussion;
  d3 silence;
  d4 silence
}

-- build

oh_Yeaahhh = do {
  d1 $ qtrigger 1 $ seqP [
    (0, 3, verse),
    (3,4, kickFill),
    (4,8, s "~ cp" # gain 1.2 # room 0.5)
  ];
  d2 $ qtrigger 2 $ seqP [
    (0,4, hihatBuild)
  ];
  d3 $ qtrigger 3 $ seqP [
    (0, 1, s "feel:2*4"),
    (1,2, s "feel:2*8"),
    (2,3, s "feel:2*16"),
    (3,4, s "feel:2*32")
  ] # room 0.3 # hpf (slow 4 (1000*saw + 100)) # speed (slow 4 (range 1 4 saw));
  d4 $ qtrigger 4 $ seqP [
    (4,8, s "<feel:6(3,8) feel:6(5,8,1)>" # room 0.95 # speed "2 1" # gain 1.3 # squiz 1.1 # up "-2")
  ]
}

-- verse
we_playin_out_HeAh

-- build
oh_Yeaahhh

-- then trigger the drop to loop
drop_It_All_Over_The___FLOOR

-- bring all together
do {
  d1 $ verse;
  d2 $ versePercussion
}

-- how to use qtrigger with filterWhen
do
  d1 $ s "bd bd sd ~"
  d2 $ s "808bd:1 cp ~ cp" # speed 4

do
  d1 $ qtrigger 1 $ filterWhen (>=0) $ s "bd bd sd ~"
  d2 $ qtrigger 2 $ filterWhen (>=0) $ s "808bd:1 cp ~ cp" # speed 4

hush
